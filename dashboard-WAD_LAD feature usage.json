{"$schema":"https://dataexplorer.azure.com/static/d/schema/24/dashboard.json","id":"4329f38d-31eb-44bf-9427-2b4a620a6936","eTag":"4329f38d-31eb-44bf-9427-2b4a620a6936","schema_version":"24","title":"WAD/LAD feature usage","autoRefresh":{"enabled":false},"tiles":[{"id":"8afa90ed-4cfb-4cd0-860e-e20b7ebf9bce","title":"WAD Usage","query":"cluster('azcrp.kusto.windows.net').database('crp_allprod').ApiQosEvent \n| where TIMESTAMP > ago(5d) \n| where operationName == \"VMExtensions.VMExtensionOperation.PUT\" \n| where isnotempty(requestEntity) \n| extend requestEntityJS = parse_json(requestEntity) \n//| where requestEntityJS.properties.publisher contains \"Microsoft.Azure.Diagnostics\" \n| where requestEntityJS.properties.type contains \"IaaSDiagnostics\" \n| extend WadConfig = iff(isempty(requestEntityJS.properties.settings.WadCfg), parse_xml(base64_decode_tostring(tostring(requestEntityJS.properties.settings.xmlCfg))).WadCfg, requestEntityJS.properties.settings.WadCfg) \n| extend HasWindowsEventLogs = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.WindowsEventLog), 0, 1) \n| extend HasMetrics = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.Metrics), 0, 1) \n| extend HasPerformanceCounters = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.PerformanceCounters), 0, 1) \n| extend HasCrashDumps = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.CrashDumps), 0, 1) \n| extend HasEtwProviders = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.EtwProviders), 0, 1) \n| extend HasDirectories = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.Directories), 0, 1) \n| extend HasLogs = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.Logs), 0, 1) \n| extend HasDockerSources = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.DockerSources), 0, 1) \n| extend HasDiagnosticInfrastructureLogs = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.DiagnosticInfrastructureLogs), 0, 1) \n| extend HasBlobStorage = iff(isempty(requestEntityJS.properties.settings.StorageType), 0, iff(indexof(requestEntityJS.properties.settings.StorageType, \"Blob\") >= 0, 1, 0))  \n| extend HasTableStorage = iff(isempty(requestEntityJS.properties.settings.StorageType), 1, iff(indexof(requestEntityJS.properties.settings.StorageType, \"Table\") >= 0, 1, 0))  \n| mv-apply WadConfig.SinksConfig.Sink on ( \n    mv-expand with_itemindex=Index WadConfig.SinksConfig.Sink \n    | extend HasEventHub = iif(isempty(WadConfig.SinksConfig.Sink[Index].EventHub), 0, 1) \n    | extend HasAppInsights = iif(isempty(WadConfig.SinksConfig.Sink[Index].ApplicationInsights), 0, 1) \n    | summarize EventHubCount = sum(HasEventHub), AICount = sum(HasAppInsights) \n    ) \n| extend HasEventHub = iif(EventHubCount > 0, 1, 0) \n| extend HasAppInsight = iif(AICount > 0, 1, 0) \n| summarize BlobUsage=sum(HasBlobStorage) * 100.0 / count(),  \n    TableUsage=sum(HasTableStorage) * 100.0 / count(),  \n    PerfUsage=sum(HasPerformanceCounters) * 100.0 / count(), \n    WindowsEventLogs=sum(HasWindowsEventLogs) * 100.0 / count(), \n    CrashDumpUsage=sum(HasCrashDumps) * 100.0 / count(), \n    EtwUsage=sum(HasEtwProviders) * 100.0 / count(),  \n    TextLogUsage=sum(HasDirectories) * 100.0 / count(),  \n    DockerUsage=sum(HasDockerSources) * 100.0 / count(),  \n    EventHubUsage=sum(HasEventHub) * 100.0 / count(),  \n    AppInsightUsage=sum(HasAppInsight) * 100.0 / count(), \n    LogsUsage=sum(HasLogs) * 100.0 / count(), \n    dcount(resourceName) \n","dataSourceId":"fb6da167-8074-4198-8402-5d665e70c60a","visualType":"column","pageId":"ddc1a595-96ec-4f53-a1c8-e8ae397f23bf","layout":{"x":0,"y":0,"width":23,"height":5},"usedParamVariables":[],"visualOptions":{"hideTileTitle":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[]},"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"8a90a4e4-4890-4f50-9b75-78058c5f3d58","title":"LAD Usage","query":"let FiveDayPUTIaaS = cluster('azcrp.kusto.windows.net').database('crp_allprod').ApiQosEvent \n| where TIMESTAMP > ago(5d) \n| where operationName == \"VMExtensions.VMExtensionOperation.PUT\" \n| where isnotempty(requestEntity) \n| extend requestEntityJS = parse_json(requestEntity) \n| where requestEntityJS.properties.type contains \"IaaSDiagnostics\"\n| extend WadConfig = iff(isempty(requestEntityJS.properties.settings.WadCfg), parse_xml(base64_decode_tostring(tostring(requestEntityJS.properties.settings.xmlCfg))).WadCfg, requestEntityJS.properties.settings.WadCfg) \n;\nlet Usage_WindowsEventLogs = FiveDayPUTIaaS\n| extend HasWindowsEventLogs = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.WindowsEventLog), 0, 1)\n| summarize Category = \"WindowsEventLogs\", Usage=round(sum(HasWindowsEventLogs) * 100.0 / count(),3);\nlet Usage_Metrics = FiveDayPUTIaaS\n| extend HasMetrics = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.Metrics), 0, 1) \n| summarize Category = \"Metrics\", Usage=round(sum(HasMetrics) * 100.0 / count(),3);\nlet Usage_Performance = FiveDayPUTIaaS\n| extend HasPerformanceCounters = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.PerformanceCounters), 0, 1)  \n| summarize Category = \"Performance\", Usage=round(sum(HasPerformanceCounters) * 100.0 / count(),3);\nunion Usage_WindowsEventLogs, \n      Usage_Performance,\n      Usage_Metrics\n| sort by Usage","dataSourceId":"fb6da167-8074-4198-8402-5d665e70c60a","visualType":"bar","pageId":"ddc1a595-96ec-4f53-a1c8-e8ae397f23bf","layout":{"x":0,"y":10,"width":23,"height":5},"usedParamVariables":[],"visualOptions":{"hideTileTitle":false,"multipleYAxes":{"base":{"id":"-1","label":"Percent Usage","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[]},"hideLegend":true,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"9e1f9f05-5aa8-4472-8151-2893c6a2e56d","title":"WAD Usage","query":"cluster('azcrp.kusto.windows.net').database('crp_allprod').ApiQosEvent \n| where TIMESTAMP > ago(5d) \n| where operationName == \"VMExtensions.VMExtensionOperation.PUT\" \n| where isnotempty(requestEntity) \n| extend requestEntityJS = parse_json(requestEntity) \n//| where requestEntityJS.properties.publisher contains \"Microsoft.Azure.Diagnostics\" \n| where requestEntityJS.properties.type contains \"IaaSDiagnostics\" \n| extend WadConfig = iff(isempty(requestEntityJS.properties.settings.WadCfg), parse_xml(base64_decode_tostring(tostring(requestEntityJS.properties.settings.xmlCfg))).WadCfg, requestEntityJS.properties.settings.WadCfg) \n| extend HasWindowsEventLogs = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.WindowsEventLog), 0, 1) \n| extend HasPerformanceCounters = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.PerformanceCounters), 0, 1) \n| extend HasTableStorage = iff(isempty(requestEntityJS.properties.settings.StorageType), 1, iff(indexof(requestEntityJS.properties.settings.StorageType, \"Table\") >= 0, 1, 0))  \n| mv-apply WadConfig.SinksConfig.Sink on ( \n    mv-expand with_itemindex=Index WadConfig.SinksConfig.Sink \n    | extend HasEventHub = iif(isempty(WadConfig.SinksConfig.Sink[Index].EventHub), 0, 1) \n    | extend HasAppInsights = iif(isempty(WadConfig.SinksConfig.Sink[Index].ApplicationInsights), 0, 1) \n    | summarize EventHubCount = sum(HasEventHub), AICount = sum(HasAppInsights) \n    ) \n| extend HasEventHub = iif(EventHubCount > 0, 1, 0) \n| summarize \n    cnt = count(),\n    TableUsage=sum(HasTableStorage) * 100.0 / count(),  \n    PerfUsage=sum(HasPerformanceCounters) * 100.0 / count(), \n    WindowsEventLogs=sum(HasWindowsEventLogs) * 100.0 / count(),\n    EventHubUsage=sum(HasEventHub) * 100.0 / count()\n","dataSourceId":"fb6da167-8074-4198-8402-5d665e70c60a","visualType":"column","pageId":"ddc1a595-96ec-4f53-a1c8-e8ae397f23bf","layout":{"x":0,"y":5,"width":23,"height":5},"usedParamVariables":[],"visualOptions":{"hideTileTitle":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[]},"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"af7c0372-ce41-4198-85b6-dd3a0ab77f72","title":"WAD ResourceName Count","query":"cluster('azcrp.kusto.windows.net').database('crp_allprod').ApiQosEvent \n| where TIMESTAMP > ago(5d) \n| where operationName == \"VMExtensions.VMExtensionOperation.PUT\" \n| where isnotempty(requestEntity) \n| extend requestEntityJS = parse_json(requestEntity) \n//| where requestEntityJS.properties.publisher contains \"Microsoft.Azure.Diagnostics\" \n| where requestEntityJS.properties.type contains \"IaaSDiagnostics\" \n| summarize resourceCount = dcount(resourceName)\n","dataSourceId":"fb6da167-8074-4198-8402-5d665e70c60a","visualType":"card","pageId":"ddc1a595-96ec-4f53-a1c8-e8ae397f23bf","layout":{"x":0,"y":15,"width":23,"height":5},"usedParamVariables":[],"visualOptions":{"hideTileTitle":false,"multiStat__textSize":"auto","multiStat__valueColumn":{"type":"infer"},"colorRulesDisabled":false,"colorRules":[],"colorStyle":"light"}},{"id":"8e955b3d-9546-44d4-bab1-c4ecf3eb41ea","title":"WAD Usage","query":"cluster('azcrp.kusto.windows.net').database('crp_allprod').ApiQosEvent \n| where TIMESTAMP > ago(5d) \n| where operationName == \"VMExtensions.VMExtensionOperation.PUT\" \n| where isnotempty(requestEntity) \n| extend requestEntityJS = parse_json(requestEntity) \n//| where requestEntityJS.properties.publisher contains \"Microsoft.Azure.Diagnostics\" \n| where requestEntityJS.properties.type contains \"IaaSDiagnostics\" \n| extend WadConfig = iff(isempty(requestEntityJS.properties.settings.WadCfg), parse_xml(base64_decode_tostring(tostring(requestEntityJS.properties.settings.xmlCfg))).WadCfg, requestEntityJS.properties.settings.WadCfg) \n| extend HasWindowsEventLogs = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.WindowsEventLog), 0, 1) \n| extend HasPerformanceCounters = iff(isempty(WadConfig.DiagnosticMonitorConfiguration.PerformanceCounters), 0, 1) \n| extend HasTableStorage = iff(isempty(requestEntityJS.properties.settings.StorageType), 1, iff(indexof(requestEntityJS.properties.settings.StorageType, \"Table\") >= 0, 1, 0))  \n| mv-apply WadConfig.SinksConfig.Sink on ( \n    mv-expand with_itemindex=Index WadConfig.SinksConfig.Sink \n    | extend HasEventHub = iif(isempty(WadConfig.SinksConfig.Sink[Index].EventHub), 0, 1) \n    | extend HasAppInsights = iif(isempty(WadConfig.SinksConfig.Sink[Index].ApplicationInsights), 0, 1) \n    | summarize EventHubCount = sum(HasEventHub), AICount = sum(HasAppInsights) \n    ) \n| extend HasEventHub = iif(EventHubCount > 0, 1, 0) \n| summarize \n    cnt = count(),\n    TableUsage=sum(HasTableStorage) * 100.0 / count(),  \n    PerfUsage=sum(HasPerformanceCounters) * 100.0 / count(), \n    WindowsEventLogs=sum(HasWindowsEventLogs) * 100.0 / count(),\n    EventHubUsage=sum(HasEventHub) * 100.0 / count()\n","dataSourceId":"fb6da167-8074-4198-8402-5d665e70c60a","visualType":"column","pageId":"ddc1a595-96ec-4f53-a1c8-e8ae397f23bf","layout":{"x":0,"y":20,"width":23,"height":5},"usedParamVariables":[],"visualOptions":{"hideTileTitle":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[]},"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}}],"parameters":[{"kind":"duration","id":"261df8e7-5dd0-4bfb-98c8-f44fb2189d2b","displayName":"Time range","beginVariableName":"_startTime","endVariableName":"_endTime","defaultValue":{"kind":"dynamic","count":1,"unit":"hours"},"showOnPages":{"kind":"all"}}],"dataSources":[{"id":"fb6da167-8074-4198-8402-5d665e70c60a","name":"azcrp","clusterUri":"https://azcrp.kusto.windows.net/","database":"crp_allprod","kind":"manual-kusto","scopeId":"kusto"}],"pages":[{"name":"Page 1","id":"ddc1a595-96ec-4f53-a1c8-e8ae397f23bf"}]}